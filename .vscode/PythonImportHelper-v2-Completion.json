[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "apps",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "IntegrityError",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "apps.app_1",
        "description": "apps.app_1",
        "isExtraImport": true,
        "detail": "apps.app_1",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "apps.app_2",
        "description": "apps.app_2",
        "isExtraImport": true,
        "detail": "apps.app_2",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "apps.app_3",
        "description": "apps.app_3",
        "isExtraImport": true,
        "detail": "apps.app_3",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.contrib.auth.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.contrib.auth.validators",
        "description": "django.contrib.auth.validators",
        "detail": "django.contrib.auth.validators",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.utils.timezone",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.utils.timezone",
        "description": "django.utils.timezone",
        "detail": "django.utils.timezone",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "users.signals",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "users.signals",
        "description": "users.signals",
        "detail": "users.signals",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "APITestCase",
        "importPath": "rest_framework.test",
        "description": "rest_framework.test",
        "isExtraImport": true,
        "detail": "rest_framework.test",
        "documentation": {}
    },
    {
        "label": "ObtainAuthToken",
        "importPath": "rest_framework.authtoken.views",
        "description": "rest_framework.authtoken.views",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.views",
        "documentation": {}
    },
    {
        "label": "obtain_auth_token",
        "importPath": "rest_framework.authtoken.views",
        "description": "rest_framework.authtoken.views",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.views",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "SpectacularAPIView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "SpectacularSwaggerView",
        "importPath": "drf_spectacular.views",
        "description": "drf_spectacular.views",
        "isExtraImport": true,
        "detail": "drf_spectacular.views",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "App1Config",
        "kind": 6,
        "importPath": "apps.app_1.apps",
        "description": "apps.app_1.apps",
        "peekOfCode": "class App1Config(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"app_1\"",
        "detail": "apps.app_1.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.app_1.urls",
        "description": "apps.app_1.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"message/\", views.message),\n]",
        "detail": "apps.app_1.urls",
        "documentation": {}
    },
    {
        "label": "message",
        "kind": 2,
        "importPath": "apps.app_1.views",
        "description": "apps.app_1.views",
        "peekOfCode": "def message(request):\n    return HttpResponse(\"Hello App 1\")",
        "detail": "apps.app_1.views",
        "documentation": {}
    },
    {
        "label": "App2Config",
        "kind": 6,
        "importPath": "apps.app_2.apps",
        "description": "apps.app_2.apps",
        "peekOfCode": "class App2Config(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"app_2\"",
        "detail": "apps.app_2.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.app_2.urls",
        "description": "apps.app_2.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"message/\", views.message),\n]",
        "detail": "apps.app_2.urls",
        "documentation": {}
    },
    {
        "label": "message",
        "kind": 2,
        "importPath": "apps.app_2.views",
        "description": "apps.app_2.views",
        "peekOfCode": "def message(request):\n    return HttpResponse(\"Hello App 2\")",
        "detail": "apps.app_2.views",
        "documentation": {}
    },
    {
        "label": "App3Config",
        "kind": 6,
        "importPath": "apps.app_3.apps",
        "description": "apps.app_3.apps",
        "peekOfCode": "class App3Config(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"app_3\"",
        "detail": "apps.app_3.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.app_3.urls",
        "description": "apps.app_3.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"message/\", views.message)\n]",
        "detail": "apps.app_3.urls",
        "documentation": {}
    },
    {
        "label": "message",
        "kind": 2,
        "importPath": "apps.app_3.views",
        "description": "apps.app_3.views",
        "peekOfCode": "def message(request):\n    return HttpResponse(\"App 3\")",
        "detail": "apps.app_3.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.users.migrations.0001_initial",
        "description": "apps.users.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CustomUser',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "apps.users.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "apps.users.migrations.0002_usertype_userprofile_user_type",
        "description": "apps.users.migrations.0002_usertype_userprofile_user_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('users', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserType',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=255, unique=True)),",
        "detail": "apps.users.migrations.0002_usertype_userprofile_user_type",
        "documentation": {}
    },
    {
        "label": "UserProfileAdmin",
        "kind": 6,
        "importPath": "apps.users.admin",
        "description": "apps.users.admin",
        "peekOfCode": "class UserProfileAdmin(admin.ModelAdmin):\n    list_display = ('user', 'user_type', 'bio')\n@admin.register(CustomUser)\nclass CustomUserAdmin(UserAdmin):\n    pass\n@admin.register(UserType)\nclass UserTypeAdmin(admin.ModelAdmin):\n    list_display = ('name',)",
        "detail": "apps.users.admin",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "apps.users.admin",
        "description": "apps.users.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    pass\n@admin.register(UserType)\nclass UserTypeAdmin(admin.ModelAdmin):\n    list_display = ('name',)",
        "detail": "apps.users.admin",
        "documentation": {}
    },
    {
        "label": "UserTypeAdmin",
        "kind": 6,
        "importPath": "apps.users.admin",
        "description": "apps.users.admin",
        "peekOfCode": "class UserTypeAdmin(admin.ModelAdmin):\n    list_display = ('name',)",
        "detail": "apps.users.admin",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "apps.users.apps",
        "description": "apps.users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'users'\n    def ready(self):\n        import users.signals",
        "detail": "apps.users.apps",
        "documentation": {}
    },
    {
        "label": "UserType",
        "kind": 6,
        "importPath": "apps.users.models",
        "description": "apps.users.models",
        "peekOfCode": "class UserType(models.Model):\n    name = models.CharField(max_length=255, unique=True)\n    def __str__(self):\n        return self.name\nclass UserProfile(models.Model):\n    user = models.OneToOneField(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name=\"profile\")\n    avatar = models.ImageField(upload_to='avatars/', null=True, blank=True)  #\n    bio = models.TextField(null=True, blank=True)\n    user_type = models.ForeignKey(UserType, on_delete=models.SET_NULL, null=True, blank=True)\n    def __str__(self):",
        "detail": "apps.users.models",
        "documentation": {}
    },
    {
        "label": "UserProfile",
        "kind": 6,
        "importPath": "apps.users.models",
        "description": "apps.users.models",
        "peekOfCode": "class UserProfile(models.Model):\n    user = models.OneToOneField(settings.AUTH_USER_MODEL, on_delete=models.CASCADE, related_name=\"profile\")\n    avatar = models.ImageField(upload_to='avatars/', null=True, blank=True)  #\n    bio = models.TextField(null=True, blank=True)\n    user_type = models.ForeignKey(UserType, on_delete=models.SET_NULL, null=True, blank=True)\n    def __str__(self):\n        return self.user.username\nclass CustomUser(AbstractUser):\n    pass  # For now, use the default fields provided by AbstractUser",
        "detail": "apps.users.models",
        "documentation": {}
    },
    {
        "label": "CustomUser",
        "kind": 6,
        "importPath": "apps.users.models",
        "description": "apps.users.models",
        "peekOfCode": "class CustomUser(AbstractUser):\n    pass  # For now, use the default fields provided by AbstractUser",
        "detail": "apps.users.models",
        "documentation": {}
    },
    {
        "label": "UserTypeSerializer",
        "kind": 6,
        "importPath": "apps.users.serializers",
        "description": "apps.users.serializers",
        "peekOfCode": "class UserTypeSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = UserType\n        fields = \"__all__\"\nclass UserProfileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = UserProfile\n        fields = ('avatar', 'bio')\nclass UserSerializer(serializers.ModelSerializer):\n    profile = UserProfileSerializer()",
        "detail": "apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "UserProfileSerializer",
        "kind": 6,
        "importPath": "apps.users.serializers",
        "description": "apps.users.serializers",
        "peekOfCode": "class UserProfileSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = UserProfile\n        fields = ('avatar', 'bio')\nclass UserSerializer(serializers.ModelSerializer):\n    profile = UserProfileSerializer()\n    class Meta:\n        model = get_user_model()\n        fields = ['id', 'username', 'email', 'first_name', 'last_name', 'profile']\nfrom django.contrib.auth import get_user_model",
        "detail": "apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "UserSerializer",
        "kind": 6,
        "importPath": "apps.users.serializers",
        "description": "apps.users.serializers",
        "peekOfCode": "class UserSerializer(serializers.ModelSerializer):\n    profile = UserProfileSerializer()\n    class Meta:\n        model = get_user_model()\n        fields = ['id', 'username', 'email', 'first_name', 'last_name', 'profile']\nfrom django.contrib.auth import get_user_model\nfrom rest_framework import serializers\nclass UserRegistrationSerializer(serializers.ModelSerializer):\n    user_type = serializers.SlugRelatedField(queryset=UserType.objects.all(), slug_field='name', required=True)\n    class Meta:",
        "detail": "apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializer",
        "kind": 6,
        "importPath": "apps.users.serializers",
        "description": "apps.users.serializers",
        "peekOfCode": "class UserRegistrationSerializer(serializers.ModelSerializer):\n    user_type = serializers.SlugRelatedField(queryset=UserType.objects.all(), slug_field='name', required=True)\n    class Meta:\n        model = get_user_model()\n        fields = ['username', 'email', 'password', 'first_name', 'last_name', 'user_type']\n        extra_kwargs = {\n            'password': {'write_only': True, 'required': True}\n        }\n    # def create(self, validated_data):\n    #     user = get_user_model().objects.create_user(",
        "detail": "apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "create_or_save_user_profile",
        "kind": 2,
        "importPath": "apps.users.signals",
        "description": "apps.users.signals",
        "peekOfCode": "def create_or_save_user_profile(sender, instance, created, **kwargs):\n    UserProfile = apps.get_model('users', 'UserProfile')\n    if created:\n        UserProfile.objects.create(user=instance)\n    else:\n        instance.profile.save()\ndef save_user_profile(sender, instance, **kwargs):\n    instance.profile.save()\n# Then inside the ready() method in apps.py\ndef ready(self):",
        "detail": "apps.users.signals",
        "documentation": {}
    },
    {
        "label": "save_user_profile",
        "kind": 2,
        "importPath": "apps.users.signals",
        "description": "apps.users.signals",
        "peekOfCode": "def save_user_profile(sender, instance, **kwargs):\n    instance.profile.save()\n# Then inside the ready() method in apps.py\ndef ready(self):\n    from .models import CustomUser\n    from . import signals\n    post_save.connect(signals.create_or_save_user_profile, sender=CustomUser)\n    post_save.connect(signals.save_user_profile, sender=CustomUser)",
        "detail": "apps.users.signals",
        "documentation": {}
    },
    {
        "label": "ready",
        "kind": 2,
        "importPath": "apps.users.signals",
        "description": "apps.users.signals",
        "peekOfCode": "def ready(self):\n    from .models import CustomUser\n    from . import signals\n    post_save.connect(signals.create_or_save_user_profile, sender=CustomUser)\n    post_save.connect(signals.save_user_profile, sender=CustomUser)",
        "detail": "apps.users.signals",
        "documentation": {}
    },
    {
        "label": "UserTests",
        "kind": 6,
        "importPath": "apps.users.tests",
        "description": "apps.users.tests",
        "peekOfCode": "class UserTests(APITestCase):\n    def test_create_user(self):\n        \"\"\"\n        Ensure we can create a new user.\n        \"\"\"\n        url = reverse('register')\n        data = {'username': 'testuser', 'email': 'test@example.com', 'password': 'testpass'}\n        response = self.client.post(url, data, format='json')\n        self.assertEqual(response.status_code, status.HTTP_201_CREATED)\n        self.assertEqual(CustomUser.objects.count(), 1)",
        "detail": "apps.users.tests",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "apps.users.urls",
        "description": "apps.users.urls",
        "peekOfCode": "urlpatterns = [\n    path('users/', UserListCreateView.as_view(), name='user-list-create'),\n    path('users/<int:pk>/', UserRetrieveUpdateDestroyView.as_view(), name='user-retrieve-update-destroy'),\n    path('login/', CustomObtainAuthToken.as_view(), name='api-token-auth'),\n    path('register/', UserRegistrationView.as_view(), name='register'),\n    path('user-types/', UserTypeListView.as_view(), name='user-type-list'),\n    path('user-types/<int:pk>/', UserTypeDetailView.as_view(), name='user-type-detail'),\n]",
        "detail": "apps.users.urls",
        "documentation": {}
    },
    {
        "label": "UserListCreateView",
        "kind": 6,
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "peekOfCode": "class UserListCreateView(generics.ListCreateAPIView):\n    \"\"\"\n    get:\n    Return a list of all existing users.\n    post:\n    Create a new user.\n    \"\"\"\n    queryset = CustomUser.objects.all()\n    serializer_class = UserSerializer\nclass UserRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):",
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "UserRetrieveUpdateDestroyView",
        "kind": 6,
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "peekOfCode": "class UserRetrieveUpdateDestroyView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = CustomUser.objects.all()\n    serializer_class = UserSerializer\nclass CustomObtainAuthToken(ObtainAuthToken):\n    def post(self, request, *args, **kwargs):\n        response = super().post(request, *args, **kwargs)\n        token = Token.objects.get(key=response.data['token'])\n        return Response({'token': token.key, 'id': token.user_id, 'username': token.user.username})\nclass RegisterView(APIView):\n    def post(self, request):",
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "CustomObtainAuthToken",
        "kind": 6,
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "peekOfCode": "class CustomObtainAuthToken(ObtainAuthToken):\n    def post(self, request, *args, **kwargs):\n        response = super().post(request, *args, **kwargs)\n        token = Token.objects.get(key=response.data['token'])\n        return Response({'token': token.key, 'id': token.user_id, 'username': token.user.username})\nclass RegisterView(APIView):\n    def post(self, request):\n        serializer = UserSerializer(data=request.data)\n        if serializer.is_valid():\n            try:",
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "RegisterView",
        "kind": 6,
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "peekOfCode": "class RegisterView(APIView):\n    def post(self, request):\n        serializer = UserSerializer(data=request.data)\n        if serializer.is_valid():\n            try:\n                serializer.save()\n                return Response(serializer.data, status=status.HTTP_201_CREATED)\n            except IntegrityError:\n                return Response({\"error\": \"Username or email already exists.\"}, status=status.HTTP_400_BAD_REQUEST)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)",
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "UserListCreateView",
        "kind": 6,
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "peekOfCode": "class UserListCreateView(generics.ListCreateAPIView):\n    queryset = CustomUser.objects.all()\n    serializer_class = UserSerializer\n    permission_classes = [IsAuthenticated]\nclass UserRegistrationView(generics.CreateAPIView):\n    serializer_class = UserRegistrationSerializer\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        if serializer.is_valid():\n            self.perform_create(serializer)",
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "UserRegistrationView",
        "kind": 6,
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "peekOfCode": "class UserRegistrationView(generics.CreateAPIView):\n    serializer_class = UserRegistrationSerializer\n    def create(self, request, *args, **kwargs):\n        serializer = self.get_serializer(data=request.data)\n        if serializer.is_valid():\n            self.perform_create(serializer)\n            return Response(serializer.data, status=status.HTTP_201_CREATED)\n        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)\nclass UserTypeListView(generics.ListCreateAPIView):\n    queryset = UserType.objects.all()",
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "UserTypeListView",
        "kind": 6,
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "peekOfCode": "class UserTypeListView(generics.ListCreateAPIView):\n    queryset = UserType.objects.all()\n    serializer_class = UserTypeSerializer\n    permission_classes = [permissions.IsAdminUser]  # Only allow admin to create or list user types\nclass UserTypeDetailView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = UserType.objects.all()\n    serializer_class = UserTypeSerializer\n    permission_classes = [permissions.IsAdminUser]  # Only allow admin to update, delete, or retrieve user types",
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "UserTypeDetailView",
        "kind": 6,
        "importPath": "apps.users.views",
        "description": "apps.users.views",
        "peekOfCode": "class UserTypeDetailView(generics.RetrieveUpdateDestroyAPIView):\n    queryset = UserType.objects.all()\n    serializer_class = UserTypeSerializer\n    permission_classes = [permissions.IsAdminUser]  # Only allow admin to update, delete, or retrieve user types",
        "detail": "apps.users.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "main.asgi",
        "description": "main.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "main.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-ff7=f^0ox8m@md)i4qvi2c3$#e4d_75jn=s3ogo(kwk2xe4js_\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nsys.path.insert(0, os.path.join(BASE_DIR, 'apps'))",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-ff7=f^0ox8m@md)i4qvi2c3$#e4d_75jn=s3ogo(kwk2xe4js_\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nsys.path.insert(0, os.path.join(BASE_DIR, 'apps'))\nINSTALLED_APPS = [\n    # Django apps\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nsys.path.insert(0, os.path.join(BASE_DIR, 'apps'))\nINSTALLED_APPS = [\n    # Django apps\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nsys.path.insert(0, os.path.join(BASE_DIR, 'apps'))\nINSTALLED_APPS = [\n    # Django apps\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    # Django apps\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    # Third party apps\n    \"corsheaders\",",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "ROOT_URLCONF = \"main.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "WSGI_APPLICATION = \"main.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/4.1/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# Default primary key field type",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.1/howto/static-files/\nSTATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "STATIC_URL = \"/static/\"\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Aamer Django Template',\n    'DESCRIPTION': 'Aamer description',",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Aamer Django Template',\n    'DESCRIPTION': 'Aamer description',\n    'VERSION': '1.0.0',",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Aamer Django Template',\n    'DESCRIPTION': 'Aamer description',\n    'VERSION': '1.0.0',\n    'SERVE_URLCONF': 'main.urls'  # typically main.urls in many Django projects",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Aamer Django Template',\n    'DESCRIPTION': 'Aamer description',\n    'VERSION': '1.0.0',\n    'SERVE_URLCONF': 'main.urls'  # typically main.urls in many Django projects\n}",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nSPECTACULAR_SETTINGS = {\n    'TITLE': 'Aamer Django Template',\n    'DESCRIPTION': 'Aamer description',\n    'VERSION': '1.0.0',\n    'SERVE_URLCONF': 'main.urls'  # typically main.urls in many Django projects\n}\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n    'DEFAULT_AUTHENTICATION_CLASSES': (",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "SPECTACULAR_SETTINGS",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "SPECTACULAR_SETTINGS = {\n    'TITLE': 'Aamer Django Template',\n    'DESCRIPTION': 'Aamer description',\n    'VERSION': '1.0.0',\n    'SERVE_URLCONF': 'main.urls'  # typically main.urls in many Django projects\n}\nREST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework.authentication.TokenAuthentication',",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',\n    'DEFAULT_AUTHENTICATION_CLASSES': (\n        'rest_framework.authentication.TokenAuthentication',\n    ),\n}\nAUTH_USER_MODEL = 'users.CustomUser'\nCORS_ALLOWED_ORIGINS = [\n    'http://localhost:8000',\n]",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.CustomUser'\nCORS_ALLOWED_ORIGINS = [\n    'http://localhost:8000',\n]",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "CORS_ALLOWED_ORIGINS",
        "kind": 5,
        "importPath": "main.settings",
        "description": "main.settings",
        "peekOfCode": "CORS_ALLOWED_ORIGINS = [\n    'http://localhost:8000',\n]",
        "detail": "main.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "main.urls",
        "description": "main.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path('api/', include('users.urls')),\n    path('api-token-auth/', obtain_auth_token, name='api_token_auth'),\n    path('api/schema/', SpectacularAPIView.as_view(), name='schema'),\n    path('api/schema/swagger-ui/', SpectacularSwaggerView.as_view(url_name='schema'), name='swagger-ui'),\n]",
        "detail": "main.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "main.wsgi",
        "description": "main.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "main.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"main.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]